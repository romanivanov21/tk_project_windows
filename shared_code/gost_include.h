/*******************************************************************
* Файл: gost_include.h											   *
* Описание: содержит объявление extern функций библиотеки		   *
* crypt_gost_28147-89.dll										   *
* Автор: Иванов Роман Витальевич (c)							   *
* Год: 2014 - 2015												   *
*																   *
********************************************************************/

#ifndef _GOST_INCLUDE_H_
#define _GOST_INCLUDE_H_

#include "..\crypt_gost_28147-89\crypt_gost_types.h"

/*******************************************************************
* Функция key_box_init() инициализирует ключ шифрования			   *
********************************************************************/
extern "C" void key_box_init();

extern "C" word32 read_vector_init(const char *path, const size_t *size_path);
/*******************************************************************
* Функция gostcrypt() шифрует 64 бита информации                   *
*			в режиме простой замены								   *
*  Параметры функции:											   *
*  1. {word32 const *in_data} массив из 2 элементов по 32 бит,	   *
*  входные данные для шифрования								   *
*																   *
*  2. {word32 *out_data} массив из 2 элементов по 32 бит           *
*  для зашифрованных данных										   *
*																   *
*  3. {word32 const *gost_key} - массив из 8 элементов типа word32 *
*	  (ключ шифорвания)											   *
*																   *
********************************************************************/
extern "C" void gostcrypt( word32 const *in_data, word32 *out_data, word32 const *gost_key);
/*******************************************************************
* Функция gostdecrypt() расшифрует 64 бита информации              *
*			в режиме простой замены								   *
*  Параметры функции:											   *
*  1. {word32 const *in_data} массив из 2 элементов по 32 бит,	   *
*  входные данные для расшифрования								   *
*																   *
*  2. {word32 *out_data} массив из 2 элементов по 32 бит           *
*  для расшифрованных данных									   *
*																   *
*  3. {word32 const *gost_key} - массив из 8 элементов типа word32 *
*	  (ключ расшифрования)										   *
*																   *
********************************************************************/
extern "C" void gostdecrypt(word32 const *in_data, word32 *out_data, word32 const *gost_key);

/*******************************************************************
* Функция hash_512() выяисляет хэш-функцию размером 512 бит		   *
*																   *
*  Параметры функции:											   *
*  1. {const byte *message} - массив данных, для которого		   *
*  вычисляется хэш												   *
*																   *
*  2. {word64 *length} - длина переданного массива				   *
*  для вычисления хэш											   *
*																   *
*  3. {byte *hash} - массив из 64 элементов для результата		   *
*																   *
********************************************************************/
extern "C" void hash_512(const byte *message, word64 length, byte *hash);

/*******************************************************************
* Функция hash_256() выяисляет хэш-функцию размером 256 бит		   *
*																   *
*  Параметры функции:											   *
*  1. {const byte *message} - массив данных, для которого		   *
*  вычисляется хэш												   *
*																   *
*  2. {word64 *length} - длина переданного массива				   *
*  для вычисления хэш											   *
*																   *
*  3. {byte *hash} - массив из 32 элементов для результата		   *
*																   *
********************************************************************/
extern "C" void hash_256(const byte *message, word64 length, byte *hash);
#endif